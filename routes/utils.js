require('dotenv').config(); // üëà –≤–æ—Ç —ç—Ç–æ –≤ —Å–∞–º–æ–º –≤–µ—Ä—Ö—É
const express = require('express');
const router = express.Router();
const bot = require('../bot');

const { ListObjectsV2Command } = require('@aws-sdk/client-s3');
const s3 = require('../utils/s3'); // —Ç–≤–æ–π —Ñ–∞–π–ª —Å –∫–æ–Ω—Ñ–∏–≥–æ–º

router.post('/log', async (req, res) => {
  const { userId, message } = req.body;
  if (!userId || !message) {
    return res.status(400).send('‚õî userId –∏ message –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã');
  }

  try {
    await bot.telegram.sendMessage(userId, message);
    res.send('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', err);
    res.status(500).send('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å');
  }
});

router.get('/test-s3', async (req, res) => {
  try {
    const data = await s3.send(new ListObjectsV2Command({
      Bucket: process.env.S3_BUCKET
    }));
    res.json({ status: 'ok', objects: data.Contents });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: '–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ S3', details: err.message });
  }
});

module.exports = router;
