const express = require('express');
const router = express.Router();
const User = require('../models/User');
const SingleMeet = require('../models/SingleMeet');

// üîê /auth ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.post('/auth', async (req, res) => {
  const { telegramId, gender, age, height, weight, city, photos } = req.body;

  if (!telegramId) return res.status(400).send('‚õî –ù–µ –ø–µ—Ä–µ–¥–∞–Ω telegramId');

  try {
    let user = await User.findOne({ telegramId });
    let status;

    if (!user) {
      user = await User.create({
        telegramId,
        gender: gender || '',
        age: age || 0,
        height: height || 0,
        weight: weight || 0,
        city: city || '',
        photos: Array.isArray(photos) ? photos.slice(0, 3) : [null, null, null],
      });
      status = '–¥–æ–±–∞–≤–ª–µ–Ω';
    } else {
      status = '–∑–∞–≥—Ä—É–∂–µ–Ω';
    }

    res.json({ user, status });
  } catch (err) {
    console.error('‚ùå /auth –æ—à–∏–±–∫–∞:', err);
    res.status(500).send('‚ùå –°–µ—Ä–≤–µ—Ä —Å–ª–æ–º–∞–ª—Å—è');
  }
});

// ‚úèÔ∏è /profileEdit ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
router.post('/profileEdit', async (req, res) => {
  const { telegramId, ...updateFields } = req.body;

  if (!telegramId) return res.status(400).send('‚õî –ù–µ –ø–µ—Ä–µ–¥–∞–Ω telegramId');

  try {
    const updatedUser = await User.findOneAndUpdate(
      { telegramId },
      { $set: updateFields },
      { new: true }
    );

    if (!updatedUser) return res.status(404).send('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');

    res.json({ status: '–æ–±–Ω–æ–≤–ª—ë–Ω', user: updatedUser });
  } catch (err) {
    console.error('‚ùå /profileEdit –æ—à–∏–±–∫–∞:', err);
    res.status(500).send('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
  }
});

router.post('/single/mine', async (req, res) => {
  const { telegramId } = req.body;

  if (!telegramId) {
    return res.json({ error: '‚õî –ù—É–∂–µ–Ω telegramId' });
  }

  try {
    const meetings = await SingleMeet.find({ creator: telegramId }).sort({ time: 1 });
    console.log(meetings)
    res.json({ meetings });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á:', err);
    res.json({ error: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á–∏' });
  }
});

module.exports = router;